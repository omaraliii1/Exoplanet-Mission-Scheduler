{"ast":null,"code":"const API_URL = \"http://localhost:8000\";\n\nasync function httpGetPlanets() {\n  // TODO: Once API is ready.\n  const response = await fetch(`${API_URL}/planets`);\n  return await response; // Load planets and return as JSON.\n}\n\nasync function httpGetLaunches() {\n  // TODO: Once API is ready.\n  const response = await fetch(`${API_URL}/launch`);\n  const fetchedLaunches = await response.json();\n  return fetchedLaunches.sort((a, b) => {\n    return a.flightNumber - b.flightNumber;\n  }); // Load launches, sort by flight number, and return as JSON.\n}\n\nasync function httpSubmitLaunch(launch) {\n  // TODO: Once API is ready.\n  // Submit given launch data to launch system.\n  try {\n    return await fetch(`${API_URL}/launch`, {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(launch)\n    });\n  } catch (err) {\n    return {\n      ok: false\n    };\n  }\n}\n\nasync function httpAbortLaunch(id) {\n  // TODO: Once API is ready.\n  // Delete launch with given ID.\n  // alert(id);\n  return await fetch(`${API_URL}/launch`, {\n    method: \"delete\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      flightNumber: id\n    })\n  });\n}\n\nexport { httpGetPlanets, httpGetLaunches, httpSubmitLaunch, httpAbortLaunch };","map":{"version":3,"sources":["/home/oy/test/client/src/hooks/requests.js"],"names":["API_URL","httpGetPlanets","response","fetch","httpGetLaunches","fetchedLaunches","json","sort","a","b","flightNumber","httpSubmitLaunch","launch","method","headers","body","JSON","stringify","err","ok","httpAbortLaunch","id"],"mappings":"AAAA,MAAMA,OAAO,GAAG,uBAAhB;;AAEA,eAAeC,cAAf,GAAgC;AAC9B;AACA,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEH,OAAQ,UAAZ,CAA5B;AACA,SAAO,MAAME,QAAb,CAH8B,CAI9B;AACD;;AAED,eAAeE,eAAf,GAAiC;AAC/B;AACA,QAAMF,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEH,OAAQ,SAAZ,CAA5B;AACA,QAAMK,eAAe,GAAG,MAAMH,QAAQ,CAACI,IAAT,EAA9B;AACA,SAAOD,eAAe,CAACE,IAAhB,CAAqB,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACpC,WAAOD,CAAC,CAACE,YAAF,GAAiBD,CAAC,CAACC,YAA1B;AACD,GAFM,CAAP,CAJ+B,CAQ/B;AACD;;AAED,eAAeC,gBAAf,CAAgCC,MAAhC,EAAwC;AACtC;AACA;AACA,MAAI;AACF,WAAO,MAAMT,KAAK,CAAE,GAAEH,OAAQ,SAAZ,EAAsB;AACtCa,MAAAA,MAAM,EAAE,MAD8B;AAEtCC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAF6B;AAKtCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,MAAf;AALgC,KAAtB,CAAlB;AAOD,GARD,CAQE,OAAOM,GAAP,EAAY;AACZ,WAAO;AACLC,MAAAA,EAAE,EAAE;AADC,KAAP;AAGD;AACF;;AAED,eAAeC,eAAf,CAA+BC,EAA/B,EAAmC;AACjC;AACA;AACA;AACA,SAAO,MAAMlB,KAAK,CAAE,GAAEH,OAAQ,SAAZ,EAAsB;AACtCa,IAAAA,MAAM,EAAE,QAD8B;AAEtCC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT,KAF6B;AAKtCC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEP,MAAAA,YAAY,EAAEW;AAAhB,KAAf;AALgC,GAAtB,CAAlB;AAOD;;AAED,SAASpB,cAAT,EAAyBG,eAAzB,EAA0CO,gBAA1C,EAA4DS,eAA5D","sourcesContent":["const API_URL = \"http://localhost:8000\";\n\nasync function httpGetPlanets() {\n  // TODO: Once API is ready.\n  const response = await fetch(`${API_URL}/planets`);\n  return await response;\n  // Load planets and return as JSON.\n}\n\nasync function httpGetLaunches() {\n  // TODO: Once API is ready.\n  const response = await fetch(`${API_URL}/launch`);\n  const fetchedLaunches = await response.json();\n  return fetchedLaunches.sort((a, b) => {\n    return a.flightNumber - b.flightNumber;\n  });\n\n  // Load launches, sort by flight number, and return as JSON.\n}\n\nasync function httpSubmitLaunch(launch) {\n  // TODO: Once API is ready.\n  // Submit given launch data to launch system.\n  try {\n    return await fetch(`${API_URL}/launch`, {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(launch),\n    });\n  } catch (err) {\n    return {\n      ok: false,\n    };\n  }\n}\n\nasync function httpAbortLaunch(id) {\n  // TODO: Once API is ready.\n  // Delete launch with given ID.\n  // alert(id);\n  return await fetch(`${API_URL}/launch`, {\n    method: \"delete\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({ flightNumber: id }),\n  });\n}\n\nexport { httpGetPlanets, httpGetLaunches, httpSubmitLaunch, httpAbortLaunch };\n"]},"metadata":{},"sourceType":"module"}